// Necessary for Next auth
model Account {
  id                       String  @id @default(ulid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? // @db.Text
  access_token             String? // @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? // @db.Text
  session_state            String?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  refresh_token_expires_in Int?

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
model User {
  id            String       @id @default(ulid())
  name          String?
  email         String       @unique
  password      String?
  emailVerified DateTime?
  image         String?
  phoneNumber   String?
  accounts      Account[]
  posts         Post[]
  shops         Shop[]
  shopReview    ShopReview[]
  roles         UserRole[]
  address       Address[]
  cart          Cart?
  order         Order[]
  wishlist      Wishlist?
  totalOrders   Int      @default(0) 
  couponUsages  CouponUsage[]
  couponCustomers CouponCustomer[] // New: For targeted campaigns

  createdAt DateTime @default(now())

  @@index([name])
}

model Role {
  id          String  @id @default(ulid())
  name        String  @unique
  description String?
  userRoles   UserRole[] 
}

model UserRole{
user   User @relation(fields:[userId], references: [id])
userId String
role   Role @relation(fields:[roleId], references: [id])
roleId String
assignedAt DateTime @default(now()) 
@@id([userId, roleId])
}
