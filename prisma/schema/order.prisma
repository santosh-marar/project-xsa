model Order {
  id            String         @id @default(ulid())
  userId        String
  orderNumber   String         @unique
  status        OrderStatus    @default(PENDING)
  subTotal      Float
  shippingCost  Float?         @default(0.0)
  tax           Float?         @default(0.0)
  total         Float
  shippingAddress Json         // ✅ Store a copy of the shipping address
  payment       Payment?
  notes         String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  items         OrderItem[]

  @@index([userId])
  @@index([orderNumber])
}


model OrderItem {
  id                String    @id @default(ulid())
  orderId          String
  productId        String
  productVariationId String
  quantity         Int
  price            Float     // Price at time of order
  totalPrice       Float     // price * quantity

  order            Order     @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product          Product   @relation(fields: [productId], references: [id])
  productVariation ProductVariation @relation(fields: [productVariationId], references: [id])

  @@index([orderId])
}

model Payment {
  id            String         @id @default(ulid())
  orderId       String        @unique  // One payment per order
  method        PaymentMethod @default(CASH_ON_DELIVERY)
  status        PaymentStatus @default(PENDING)
  amount        Float
  transactionId String?       @unique // ✅ Unique transaction ID from payment provider
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  order         Order         @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  REFUNDED
}

enum PaymentMethod {
  CASH_ON_DELIVERY
  ESEWA
  KHALTI
}