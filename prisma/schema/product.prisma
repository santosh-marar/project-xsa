model Product {
  id          String    @id @default(ulid())
  shopId      String
  name        String
  description String
  categoryId  String
  image       String @default("")
  brand       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  productCategory    ProductCategory @relation(fields: [categoryId], references: [id])
  shop        Shop            @relation(fields: [shopId], references: [id], onDelete: Cascade)
  productVariations  ProductVariation[]

  @@index([name, categoryId, shopId])
}

model ProductVariation {
  id          String    @id @default(ulid())
  productId   String
  price       Float
  stock       Int
  modelNumber String?
  warranty    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  image       String[]

  product     Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
 
  
  tShirtAttributes     TShirtAttributes?     
  pantAttributes       PantAttributes?    
  shirtAttributes      ShirtAttributes?
  jacketAttributes     JacketAttributes?    
  hoodieAttributes     HoodieAttributes?    
  undergarmentAttributes UndergarmentAttributes?
  shoeAttributes       ShoeAttributes? 
  genericAttributes    GenericAttributes? // For uncategorized products
  
  @@index([productId, price, createdAt])
}

model ProductCategory {
  id          String   @id @default(ulid())
  parentId    String?  // Nullable for top-level categories
  name        String   @unique
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  parentCategory ProductCategory? @relation("CategoryHierarchy", fields: [parentId], references: [id])
  subCategories  ProductCategory[] @relation("CategoryHierarchy")

  products     Product[]

  @@index([name])
}


